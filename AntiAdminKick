-- List of admin user IDs
local adminIDs = {

-----------Head Moderators-----------(2)
1301649807, -- TopIncognito [HR MOD]
470568310, -- HoneyBree_T [HR MOD]

-----------Moderators-----------(5)
303008331, -- alesko12345 [MOD]
470568310, -- Jaxxzyyy [MOD]
299133654, -- DovydasTEDS [MOD]
542318462, -- pokediner12 [MOD]
383469839, -- nedkinger [MOD]

-----------JR DEVELOPER-----------(1)
41313278, -- leporus [JR DEVELOPER]

-----------CO OWNER-----------(3)
31974897, -- imnotaguestimaboyy [CO OWNER]
7157227443, -- TridentSniper0 [CO OWNER]
24977621, -- AlphaByteDev [CO OWNER]


-----------OWNER-----------
4561105558, -- The2AnOnly [OWNER]

-----------GROUP HOLDER-----------
6073198178 -- SkullTridentHolder [GROUP HOLDER]

}

-- Convert the adminIDs array to a dictionary for O(1) lookups
local adminDict = {}
for _, id in ipairs(adminIDs) do
adminDict[id] = true
end

-- Get the Players service and LocalPlayer reference
local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")

-- Debounce to prevent redundant kicks
local hasChecked = false

-- Function to kick player if an admin is detected
local function detectAndKick()
if hasChecked then return end
for _, player in pairs(Players:GetPlayers()) do
if adminDict[player.UserId] then
localPlayer:Kick("Admin Joined")
hasChecked = true
return
end
end
end

-- Initial check on all players in the game
detectAndKick()

-- Continuous check for new players joining
Players.PlayerAdded:Connect(function(player)
if adminDict[player.UserId] then
localPlayer:Kick("Admin Joined")
hasChecked = true
end
end)

-- Periodic checks for admins using Heartbeat
RunService.Heartbeat:Connect(function()
if not hasChecked then
detectAndKick()
end
end)
